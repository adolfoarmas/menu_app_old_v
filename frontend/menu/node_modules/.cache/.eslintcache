[{"/home/adolfo/menu_app/frontend/menu/src/App.jsx":"1","/home/adolfo/menu_app/frontend/menu/src/index.js":"2","/home/adolfo/menu_app/frontend/menu/src/pages/DishList.jsx":"3","/home/adolfo/menu_app/frontend/menu/src/reportWebVitals.js":"4","/home/adolfo/menu_app/frontend/menu/src/pages/UserLogin.jsx":"5","/home/adolfo/menu_app/frontend/menu/src/components/Header.jsx":"6","/home/adolfo/menu_app/frontend/menu/src/components/CategoryItem.jsx":"7","/home/adolfo/menu_app/frontend/menu/src/services/settings.js":"8","/home/adolfo/menu_app/frontend/menu/src/services/loginUser.js":"9","/home/adolfo/menu_app/frontend/menu/src/services/logoutUser.js":"10","/home/adolfo/menu_app/frontend/menu/src/context/userContext.js":"11","/home/adolfo/menu_app/frontend/menu/src/hooks/modalHook.jsx":"12","/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/createDishCategory.js":"13","/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/getDishCategories.js":"14","/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/deleteDishCategory.js":"15","/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/editDishCategory.js":"16","/home/adolfo/menu_app/frontend/menu/src/services/user/getUserData.js":"17","/home/adolfo/menu_app/frontend/menu/src/services/dish/getDish.js":"18","/home/adolfo/menu_app/frontend/menu/src/services/dish/editDish.js":"19","/home/adolfo/menu_app/frontend/menu/src/services/dish/createDish.js":"20","/home/adolfo/menu_app/frontend/menu/src/services/dish/deleteDish.js":"21","/home/adolfo/menu_app/frontend/menu/src/services/fetchData.js":"22","/home/adolfo/menu_app/frontend/menu/src/components/DishItem.jsx":"23","/home/adolfo/menu_app/frontend/menu/src/components/ToastMessage.jsx":"24","/home/adolfo/menu_app/frontend/menu/src/components/ToolBar.jsx":"25","/home/adolfo/menu_app/frontend/menu/src/styles/css.jsx":"26","/home/adolfo/menu_app/frontend/menu/src/pages/popups/ConfirmationYesNo.jsx":"27","/home/adolfo/menu_app/frontend/menu/src/pages/forms/DishForm.jsx":"28","/home/adolfo/menu_app/frontend/menu/src/pages/forms/DishCategoryForm.jsx":"29","/home/adolfo/menu_app/frontend/menu/src/components/BussinessInformationCard.jsx":"30","/home/adolfo/menu_app/frontend/menu/src/components/forms/DishForm.jsx":"31","/home/adolfo/menu_app/frontend/menu/src/components/forms/DishCategoryForm.jsx":"32","/home/adolfo/menu_app/frontend/menu/src/components/popups/ConfirmationYesNo.jsx":"33","/home/adolfo/menu_app/frontend/menu/src/components/userInformation.jsx":"34"},{"size":849,"mtime":1680031409226,"results":"35","hashOfConfig":"36"},{"size":663,"mtime":1679176385057,"results":"37","hashOfConfig":"36"},{"size":1224,"mtime":1679930697003,"results":"38","hashOfConfig":"36"},{"size":362,"mtime":1663651394259,"results":"39","hashOfConfig":"36"},{"size":3655,"mtime":1680031409234,"results":"40","hashOfConfig":"36"},{"size":2005,"mtime":1679874364136,"results":"41","hashOfConfig":"36"},{"size":5375,"mtime":1680031409226,"results":"42","hashOfConfig":"36"},{"size":323,"mtime":1664914563964,"results":"43","hashOfConfig":"36"},{"size":573,"mtime":1680031409234,"results":"44","hashOfConfig":"36"},{"size":1019,"mtime":1679874364144,"results":"45","hashOfConfig":"36"},{"size":3352,"mtime":1679874364140,"results":"46","hashOfConfig":"36"},{"size":1194,"mtime":1679874364144,"results":"47","hashOfConfig":"36"},{"size":1072,"mtime":1678989544022,"results":"48","hashOfConfig":"36"},{"size":239,"mtime":1678804524400,"results":"49","hashOfConfig":"50"},{"size":1112,"mtime":1678996785105,"results":"51","hashOfConfig":"36"},{"size":1104,"mtime":1678993639844,"results":"52","hashOfConfig":"36"},{"size":702,"mtime":1664915295297,"results":"53","hashOfConfig":"36"},{"size":425,"mtime":1679007846008,"results":"54","hashOfConfig":"36"},{"size":1082,"mtime":1680031409234,"results":"55","hashOfConfig":"36"},{"size":1113,"mtime":1680031409234,"results":"56","hashOfConfig":"36"},{"size":1030,"mtime":1679008858045,"results":"57","hashOfConfig":"36"},{"size":742,"mtime":1678816720543,"results":"58","hashOfConfig":"36"},{"size":5050,"mtime":1680031409226,"results":"59","hashOfConfig":"36"},{"size":883,"mtime":1680031409230,"results":"60","hashOfConfig":"36"},{"size":4421,"mtime":1679874364136,"results":"61","hashOfConfig":"36"},{"size":15465,"mtime":1680031409238,"results":"62","hashOfConfig":"36"},{"size":1979,"mtime":1679873362850,"results":"63","hashOfConfig":"36"},{"size":7723,"mtime":1679873848243,"results":"64","hashOfConfig":"36"},{"size":3295,"mtime":1679873848243,"results":"65","hashOfConfig":"36"},{"size":1458,"mtime":1679874364136,"results":"66","hashOfConfig":"36"},{"size":6466,"mtime":1680031409230,"results":"67","hashOfConfig":"36"},{"size":2066,"mtime":1679874364140,"results":"68","hashOfConfig":"36"},{"size":1979,"mtime":1680031409230,"results":"69","hashOfConfig":"36"},{"size":441,"mtime":1679874364140,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jeph0y",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fptk42",{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/adolfo/menu_app/frontend/menu/src/App.jsx",[],[],"/home/adolfo/menu_app/frontend/menu/src/index.js",["183"],[],"import styled from 'styled-components';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { IndexWrapper } from './styles/css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n\nroot.render(\n  <React.StrictMode>\n    <IndexWrapper>\n      <App/>\n    </IndexWrapper>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n",[],"/home/adolfo/menu_app/frontend/menu/src/pages/DishList.jsx",["184","185","186","187"],[],"/home/adolfo/menu_app/frontend/menu/src/reportWebVitals.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/pages/UserLogin.jsx",["188","189","190","191","192","193"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport loginUser from \"../services/loginUser.js\"\nimport getUserData from \"../services/user/getUserData\"\nimport { Context } from \"../context/userContext\"\nimport { ButtonLogin, FormFieldNameLabel, FormLogin, FormLoginDiv, LoginButtonGroupDiv } from \"../styles/css.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleUser, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\n\nconst UserLogin = () => {\n\n    const [username, setUserName] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [errorText, setErrorText] = useState(\"\")\n\n    const {token, csfrToken, userLoggedId, userLoggedName} = useContext(Context)\n\n    const [csfrTokenValue, setCsfrTokenValue] = csfrToken\n    const [tokenValue, setTokenValue] = token\n    const [userLoggedIdValue, setUserLoggedValue] = userLoggedId\n    const [userLoggedNameValue, setUserLoggedNameValue] =userLoggedName\n    \n    const getCsrfToken = () => {\n        return document.cookie\n                .split('; ')\n                .find((row) => row.startsWith('csrftoken='))\n                ?.split('=')[1];\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        await loginUser({\n            username,\n            password\n        })\n        .then((data) => {\n            if (data.error){\n                return setErrorText(data.error)\n            }\n            window.localStorage.setItem('logedUserToken', data.key)\n            setTokenValue(data.key)\n            getUserData(username)\n            .then(data => {\n                // let logedUserId = \"\"\n                for(let i = 0; i <= data.length; i++) {\n                    const ApiUsername = data[i]['username']\n                    if(username.toLowerCase() ===  ApiUsername.toLowerCase()){\n                        const logedUserId = data[i]['id']\n                        const logedserName = data[i]['username']\n                        window.localStorage.setItem('logedUserId', logedUserId)\n                        window.localStorage.setItem(\"logedUserName\", logedserName)\n                        setCsfrTokenValue(getCsrfToken())\n                        setUserLoggedValue(data[i]['id'])\n                        setUserLoggedNameValue(data[i]['username'])\n                        break\n                    }\n                }\n                setUserName(null);\n                setPassword(null)\n            })\n        })\n    }\n\n\n\n    return (           \n            <FormLoginDiv>\n                <FontAwesomeIcon icon={faCircleUser} /> \n                <h2>User Login</h2>\n                <FormLogin className=\"login-form-form\" onSubmit={e => handleSubmit(e)}>\n                    <FormFieldNameLabel>\n                        <p>Username</p>\n                        <input type=\"text\" onChange={e => setUserName(e.target.value)} />\n                    </FormFieldNameLabel>\n                    <FormFieldNameLabel>\n                        <p>Password</p>\n                        <input type=\"password\"  onChange={e => setPassword(e.target.value)}/>\n                    </FormFieldNameLabel>\n                    <p> { errorText }</p>\n                    <LoginButtonGroupDiv>\n                        <ButtonLogin type=\"submit\">Login</ButtonLogin>\n                        <a href=\"/\"><FontAwesomeIcon icon={faLockOpen} /> Go to see the menu</a>\n                    </LoginButtonGroupDiv>\n                </FormLogin>\n                {tokenValue && <Navigate to=\"/\" replace={true} />}\n            </FormLoginDiv>\n    )\n}\n\nexport default UserLogin;\n\n\n\n","/home/adolfo/menu_app/frontend/menu/src/components/Header.jsx",["194","195","196","197"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport Logo from \"../b36cde191e387823d890215d9d552c27.jpg\";\nimport logoutUser from \"../services/logoutUser.js\";\nimport { Context } from \"../context/userContext\";\nimport {\n  HeadderWrapper,\n  ButtonNormal,\n  ImageDiv,\n  ButtonPanelDiv,\n} from \"../styles/css\";\nimport BussinessInformationCard from \"./BussinessInformationCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRightFromBracket } from \"@fortawesome/free-solid-svg-icons\";\nimport UserInformation from \"./userInformation\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\nconst Header = () => {\n  const [logOut, setLogOut] = useState(false);\n  const { token, csfrToken, userLoggedId, userLoggedName } =\n    useContext(Context);\n  const navigate = useNavigate();\n  const [userLoggedNameValue, setUserLoggedNameValue] = userLoggedName;\n  const [tokenValue, setTokenValue] = token;\n  const [csfrTokenValue, setCsfrTokenValue] = csfrToken;\n\n  function handleLogout(e) {\n    e.preventDefault();\n    logoutUser(tokenValue)\n      .then(() => {\n        setTokenValue(null);\n        setCsfrTokenValue(null);\n        setUserLoggedNameValue(null);\n      })\n      .catch((error) => console.errorlog(\"error\", error))\n      .finally(() => setLogOut(true));\n  }\n\n  useEffect(() => {\n    if (logOut) {\n      navigate(\"/login\");\n    }\n    setLogOut(false);\n  }, [logOut]);\n\n  return (\n    <>\n      <HeadderWrapper>\n        <ImageDiv>\n          <img src={Logo} alt=\"Logo\" />\n        </ImageDiv>\n        <BussinessInformationCard />\n        <ButtonPanelDiv>\n          {userLoggedNameValue ? (\n            <UserInformation userName={userLoggedNameValue} />\n          ) : (\n            <></>\n          )}\n          <ButtonNormal hidden={!tokenValue} onClick={handleLogout}>\n            <FontAwesomeIcon icon={faRightFromBracket} /><p>Log out</p>\n          </ButtonNormal>\n        </ButtonPanelDiv>\n      </HeadderWrapper>\n    </>\n  );\n};\n\nexport default Header;\n","/home/adolfo/menu_app/frontend/menu/src/components/CategoryItem.jsx",["198","199","200","201","202","203"],[],"import styled from \"styled-components\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport getDishes from \"../services/dish/getDish\";\nimport DishCategoryForm from \"./forms/DishCategoryForm\";\nimport DishItem from \"./DishItem\";\nimport ModalHook, { useModal } from \"../hooks/modalHook\";\nimport deleteDishCategory from \"../services/dishCategory/deleteDishCategory.js\";\nimport { CategoriesContext, Context, ToastVisibilityContext, DishesContext } from \"../context/userContext\";\nimport editDishCategory from \"../services/dishCategory/editDishCategory\";\nimport ConfirmationYesNo from \"./popups/ConfirmationYesNo\";\nimport { ButtonDeleteCategory, ButtonEditCategory, CategoryButton, CategoryWrapper, DishListWrapper, } from \"../styles/css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare, faTrashCan, faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\n\n\nconst CategoryItem = ({ data }) => {\n  const { token, csfrToken } = useContext(Context);\n  const [dishCategories, setDishCategories] = useContext(CategoriesContext);\n  const [dishes, setDishes] = useState([]);\n  const [toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType] = useContext(ToastVisibilityContext)\n\n  const [tokenValue] = token;\n  const [csfrTokenValue] = csfrToken;\n\n  const [dishesVisible, setDishesVisible] = useState(false);\n  // const [dishes, setDishes] = useState([]);\n  const [category, setCategory] = useState(data)\n  const [confirmationModalMessage, setConfirmationMessage] = useState('')\n\n  const editDishCategoryModal = useModal(\"Dish Category\");\n  const confirmationModal = useModal(\"Confirm delete category\");\n\n  const onEditDishCategoryModal = () => {\n    editDishCategoryModal.changeShow();\n  };\n  \n  const onDeleteDishCategory = () => {\n    setConfirmationMessage('Are you sure you want to delete the category?')\n    confirmationModal.changeShow();\n  } \n\n  const onConfirmation = (confirmation) => {\n    confirmation ? onConfirmateDeleteDishCategory() : onDeleteDishCategory();\n  }\n\n\n  const onConfirmateDeleteDishCategory = () => {\n    deleteDishCategory(category.id, tokenValue, csfrTokenValue)\n    .then(data => {\n      // console.log(data)\n      if(data.Error){\n        throw data\n      }\n      return data\n    })\n    .then(() => {\n      const nameDeleted = category.name\n      const indexToEdit = dishCategories.indexOf(category)\n      dishCategories.splice(indexToEdit, 1) //modifies existing array\n      setDishCategories(dishCategories)\n      displayToast('Category \"' + String(nameDeleted) + '\" has been deleted!', 'success')\n    })\n    .catch(data => {\n      displayToast(data, 'error')\n    })\n  };\n\n  const getDishesService = async (cat) => {\n    const apiDishes = await getDishes(cat)\n    setDishes(apiDishes)\n  };\n\n  const displayToast = (message, type) => {\n    setToastMessage(message)\n    setToastType(type)\n    setToastVisible(true)\n  }\n\n  useEffect(() => {\n    getDishesService(category);\n  }, [dishCategories]);\n\n  //TO REFACTOR: Unify with onSubmitNewDishCategory in DishList.jsx page\n  const onSubmit = (formData) => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"created_by\", JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n\n    editDishCategory(payload, formData.id, tokenValue, csfrTokenValue)\n    .then(data => {\n      // console.log(data)\n      if(data.Error){\n        throw data\n      }\n      return data\n    })\n    .then((data) => {\n      const editedCategory = data;\n      setCategory(editedCategory)\n      const indexToEdit = dishCategories.indexOf(category)\n      dishCategories.splice(indexToEdit, 1, editedCategory) //modifies existing array\n      setDishCategories(dishCategories)\n      onEditDishCategoryModal()\n      displayToast('Category \"' + String(data.name) + '\" has been edited!', 'success')\n    })\n    .catch(data => {\n      displayToast(data, 'error')\n    })\n  };\n\n  return (\n    <>\n      <CategoryWrapper>\n        <CategoryButton onClick={() => setDishesVisible(!dishesVisible)}>\n          <div></div>\n          <p>{category.name}</p>\n          {dishesVisible ? (\n            <FontAwesomeIcon icon={faCaretUp} />\n          ) : (\n            <FontAwesomeIcon icon={faCaretDown} />\n          )}\n\n        </CategoryButton>\n\n        {tokenValue && <><ButtonEditCategory\n          onClick={onEditDishCategoryModal}\n        >\n          <FontAwesomeIcon icon={faPenToSquare} />\n        </ButtonEditCategory>\n\n        <ButtonDeleteCategory\n          onClick={onDeleteDishCategory}\n        >\n          <FontAwesomeIcon icon={faTrashCan} />\n        </ButtonDeleteCategory></>}\n      </CategoryWrapper>\n\n      <DishListWrapper>\n        <ModalHook\n          modalHook={editDishCategoryModal}\n          content={<DishCategoryForm data={category} onSubmit={onSubmit} />}\n        />\n        <ModalHook\n          modalHook={confirmationModal}\n          content={\n            <ConfirmationYesNo\n              message={confirmationModalMessage}\n              onConfirmation={onConfirmation}\n            />\n          }\n        />\n\n        {dishes &&\n          dishes.map((dish, id) => (\n            <DishItem key={id} visible={dishesVisible} dish={dish} />\n          ))}\n      </DishListWrapper>\n    </>\n  );\n};\n\nexport default CategoryItem;","/home/adolfo/menu_app/frontend/menu/src/services/settings.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/loginUser.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/logoutUser.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/context/userContext.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/hooks/modalHook.jsx",["204"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  BtnClose,\n  ModalArea,\n  ModalBackArea,\n  ModalHeader,\n  Title,\n} from \"../styles/css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nfunction useModal(textTitle) {\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState(\"Modal\");\n  // const [isModalOpen, setIsModalOpen] = useState(false)\n\n  useEffect(() => {\n    setTitle(textTitle);\n  }, []);\n\n  const changeShow = () => {\n    setShow(!show);\n  };\n\n  return {\n    changeShow,\n    show,\n    title,\n  };\n}\n\nfunction ModalHook({ modalHook, content }) {\n  // Estado actual modalHook.show\n  // Cambio del estado modalHook.changeShow\n\n  return modalHook.show ? (\n    <ModalBackArea onClick={modalHook.changeShow}>\n      <ModalArea onClick={(e) => e.stopPropagation()}>\n        <ModalHeader>\n          <Title> {modalHook.title} </Title>\n          <BtnClose onClick={modalHook.changeShow}><FontAwesomeIcon icon={faTimes} /></BtnClose>\n        </ModalHeader>\n        {content}\n      </ModalArea>\n    </ModalBackArea>\n  ) : null;\n}\n\nexport default ModalHook;\n\nexport { useModal };\n","/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/createDishCategory.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/getDishCategories.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/deleteDishCategory.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/editDishCategory.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/user/getUserData.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dish/getDish.js",["205"],[],"import {DISHES_END_POINT} from \"../settings.js\"\n\nconst handleErrors = (response) => {\n    if(!response.ok){\n        const errorMessage = {'error': response.statusText}\n        return errorMessage\n    }\n    return response  \n}\n\nexport default async function getDish(category){\n    const respuesta =  await fetch(DISHES_END_POINT + \"?category=\" + String(category.id))\n    const json = await respuesta.json()\n    return json;\n}\n","/home/adolfo/menu_app/frontend/menu/src/services/dish/editDish.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dish/createDish.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/dish/deleteDish.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/services/fetchData.js",[],[],"/home/adolfo/menu_app/frontend/menu/src/components/DishItem.jsx",["206","207","208","209","210","211","212","213"],[],"import styled from \"styled-components\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ModalHook, { useModal } from \"../hooks/modalHook\";\nimport NewDish from \"./forms/DishForm\";\nimport { CategoriesContext, Context, DishesContext, ToastVisibilityContext } from \"../context/userContext\";\nimport editDish from \"../services/dish/editDish\";\nimport deleteDish from \"../services/dish/deleteDish.js\";\nimport ConfirmationYesNo from \"./popups/ConfirmationYesNo\";\nimport {DishWrapper, DishImage, DishDescriptionWrapper, DishPriceCurrencyWrapper, DishEditButton, DishDeleteButton, DishImageDiv} from \"../styles/css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare, faTrashCan } from '@fortawesome/free-solid-svg-icons';\n\nconst DishItem = (props) => {\n\n  const { token, csfrToken } = useContext(Context);\n  const [toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType] = useContext(ToastVisibilityContext)\n  const [dishCategories, setDishCategories] = useContext(CategoriesContext)\n\n  const [dishes, setDishes] = useContext(DishesContext);\n\n  const [tokenValue] = token;\n  const [csfrTokenValue] = csfrToken;\n\n  let [dish, setDish] = useState({});\n  const [confirmationModalMessage, setConfirmationMessage] = useState('')\n\n  const editDishHook = useModal(\"Dish\");\n  const confirmationModal = useModal(\"Confirm delete dish\");\n\n  const onConfirmation = (confirmation) => {\n    confirmation ? onConfirmateDeleteDish() : onDeleteDish();\n  }\n  \n  const onDeleteDish = () => {\n    confirmationModal.changeShow();\n  } \n\n  const editDishModal = () => {\n    editDishHook.changeShow();\n  };\n\n  const onConfirmateDeleteDish = () => {\n    deleteDish(dish.id, tokenValue, csfrTokenValue)\n    .then(data => {\n      // console.log(data)\n      if(data.Error){\n        throw data\n      }\n      return data\n    })\n    .then(() => {\n      const nameDeleted = dish.name\n      const categorySelected = dishCategories.find(obj => obj.id === dish.category)\n      const dishesOfCategorySelected = categorySelected['dishes']\n      const indexToEdit = dishesOfCategorySelected.indexOf(dish)\n      categorySelected['dishes'].splice(indexToEdit, 1) //modifies existing array\n      console.log(\"dishCategories\", dishCategories)\n      setDish(null)\n      displayToast('Category \"' + String(nameDeleted) + '\" has been deleted!', 'success')\n      onDeleteDish()\n\n    })\n    .catch(data => {\n      displayToast(data, 'error')\n    })\n  };\n\n  const displayToast = (message, type) => {\n    setToastMessage(message)\n    setToastType(type)\n    setToastVisible(true)\n  }\n\n  useEffect(() => {\n    setDish(props.dish);\n    setConfirmationMessage('Are you sure you want to delete the category?')\n  }, [dishCategories]);\n\n  //TO REFACTOR: Unify with onSubmitNewDish in DishList.jsx page\n  const onSubmit = (formData) => {\n    let payload = new FormData();\n\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"category\", JSON.parse(formData.category));\n    payload.append(\"observation\", formData.observation);\n    if (typeof formData.image != \"string\") {\n      payload.append(\"image\", formData.image);\n    }\n    payload.append(\"price\", formData.price);\n    payload.append(\"currency\", formData.currency);\n    payload.append(\n      \"created_by\",\n      JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n\n    editDish(payload, formData.id, tokenValue, csfrTokenValue)\n    .then(data => {\n      // console.log(data)\n      if(data.Error){\n        throw data\n      }\n      return data\n    })\n    .then((data) => {\n      console.log('data from post', data)\n      setDish(data);\n      console.log('dish after change', dish)\n      editDishModal()\n      displayToast('Dish \"' + String(data.name) + '\" has been edited!', 'success')\n    })\n    .catch(data => {\n      displayToast(data, 'error')\n    })\n  };\n\n  if (props.visible && dish) {\n    return (\n      <DishWrapper>\n        <ModalHook\n          modalHook={editDishHook}\n          content={<NewDish data={dish} onSubmit={onSubmit} />}\n        />\n        <ModalHook\n          modalHook={confirmationModal}\n          content={<ConfirmationYesNo message={confirmationModalMessage} onConfirmation={onConfirmation} />}\n        />\n        <DishImageDiv>\n          <DishImage src={dish.image} alt={dish.name} />\n        </DishImageDiv>\n        <DishDescriptionWrapper>\n          <h3>{dish.name}</h3>\n          <p>\n            <em>{dish.description}</em>\n          </p>\n        </DishDescriptionWrapper>\n        <DishPriceCurrencyWrapper>\n          <p>\n            {dish.currency} {dish.price}\n          </p>\n        </DishPriceCurrencyWrapper>\n        <DishEditButton hidden={!tokenValue} onClick={editDishModal}>\n        <FontAwesomeIcon icon={faPenToSquare} />\n        </DishEditButton>\n        <DishDeleteButton hidden={!tokenValue} onClick={onDeleteDish}>\n        <FontAwesomeIcon icon={faTrashCan} />\n        </DishDeleteButton>\n      </DishWrapper>\n    );\n  }\n};\n\nexport default DishItem;","/home/adolfo/menu_app/frontend/menu/src/components/ToastMessage.jsx",["214","215","216","217"],[],"/home/adolfo/menu_app/frontend/menu/src/components/ToolBar.jsx",["218","219","220","221","222"],[],"import styled from \"styled-components\";\nimport React, { useEffect, useContext } from \"react\";\nimport DishForm from \"./forms/DishForm\";\nimport DishCategoryForm from \"./forms/DishCategoryForm\";\nimport {\n  CategoriesContext,\n  Context,\n  ToastVisibilityContext,\n} from \"../context/userContext\";\nimport ModalHook, { useModal } from \"../hooks/modalHook\";\nimport createDishCategory from \"../services/dishCategory/createDishCategory\";\nimport createDish from \"../services/dish/createDish\";\nimport {ButtonNormal, ToolBarButton, ToolBarWrapper, } from \"../styles/css\"\n\nconst ToolBar = () => {\n  const { token, csfrToken } = useContext(Context);\n  const [dishCategories, setDishCategories] = useContext(CategoriesContext);\n  const [toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType,] = useContext(ToastVisibilityContext);\n  const [tokenValue] = token;\n  const [csfrTokenValue] = csfrToken;\n\n  const newDishHook = useModal(\"Dish\");\n  const newDishCategoryHook = useModal(\"Dish Category\");\n\n  const newDishModal = () => {\n    newDishHook.changeShow();\n  };\n\n  const newDishCategoryModal = () => {\n    newDishCategoryHook.changeShow();\n  };\n\n  const displayToast = (message, type) => {\n    setToastMessage(message);\n    setToastType(type);\n    setToastVisible(true);\n  };\n\n  useEffect(() => {}, [dishCategories]);\n\n  //TO REFACTOR: Unify with onSubmit in DishItem.jsx component\n  const onSubmitNewDish = (formData) => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"category\", JSON.parse(formData.category));\n    payload.append(\"observation\", formData.observation);\n    payload.append(\"image\", formData.image);\n    payload.append(\"price\", formData.price);\n    payload.append(\"currency\", formData.currency);\n    payload.append(\n      \"created_by\",\n      JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n\n    createDish(payload, tokenValue, csfrTokenValue)\n      .then((data) => {\n        // console.log(data)\n        if (data.Error) {\n          throw data;\n        }\n        return data;\n      })\n      .then((data) => {\n        const categoryId = data.category;\n        const updatedCategories = dishCategories.map((category) =>\n          category.id === categoryId\n            ? {\n                ...category,\n                dishes: [...category.dishes, data.url],\n              }\n            : category\n        );\n        setDishCategories(updatedCategories);\n        newDishModal();\n        displayToast(\n          'Dish \"' + String(data.name) + '\" has been created!',\n          \"success\"\n        );\n      })\n      .catch((data) => {\n        displayToast(data, \"error\");\n      });\n  };\n\n  //TO REFACTOR: Unify with onSubmit in CategoryItem.jsx component\n  const onSubmitNewDishCategory = (formData) => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\n      \"created_by\",\n      JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n    createDishCategory(payload, tokenValue, csfrTokenValue)\n      .then((data) => {\n        // console.log(data)\n        if (data.Error) {\n          throw data;\n        }\n        return data;\n      })\n      .then((data) => {\n        // console.log(data)\n        const newCategory = [data];\n        setDishCategories([...dishCategories, ...newCategory]);\n        newDishCategoryModal();\n        displayToast(\n          'Category \"' + String(data.name) + '\" has been created!',\n          \"success\"\n        );\n      })\n      .catch((data) => {\n        displayToast(data, \"error\");\n      });\n  };\n\n  return (\n    <>\n        {tokenValue? \n            (<ToolBarWrapper>\n        <ModalHook\n            modalHook={newDishHook}\n            content={\n            <DishForm\n                onSubmit={onSubmitNewDish}\n                dishCategories={dishCategories}\n            />\n            }\n        />\n        <ModalHook\n            modalHook={newDishCategoryHook}\n            content={<DishCategoryForm onSubmit={onSubmitNewDishCategory} />}\n        />\n        <ButtonNormal onClick={newDishModal}>\n            + Add Dish\n        </ButtonNormal>\n        <ButtonNormal onClick={newDishCategoryModal}>\n            + New Dish Category\n        </ButtonNormal>\n        </ToolBarWrapper>) : (<></>)}\n    </>\n    )\n\n}\n\nexport default ToolBar;","/home/adolfo/menu_app/frontend/menu/src/styles/css.jsx",[],[],"/home/adolfo/menu_app/frontend/menu/src/pages/popups/ConfirmationYesNo.jsx",["223","224","225","226","227"],[],"/home/adolfo/menu_app/frontend/menu/src/pages/forms/DishForm.jsx",["228"],[],"/home/adolfo/menu_app/frontend/menu/src/pages/forms/DishCategoryForm.jsx",["229"],[],"/home/adolfo/menu_app/frontend/menu/src/components/BussinessInformationCard.jsx",[],[],"/home/adolfo/menu_app/frontend/menu/src/components/forms/DishForm.jsx",["230"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport { CategoriesContext } from \"../../context/userContext\";\nimport {\n  ButtonCreateEdit,\n  FormDish,\n  FormDishDiv,\n  FormFieldNameLabel,\n  FromErrorLabel,\n  ImageForm,\n  ImageFormDiv,\n  ImageFormButtonLabel,\n  ImageInput,\n  InputsDiv,\n  SelectImageInformationLable,\n} from \"../../styles/css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudArrowUp, faCamera } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DishForm = ({ data = {}, onSubmit }) => {\n  \n  const [dishCategories] = useContext(CategoriesContext);\n  \n  const [formData, setFormData] = useState(data);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  useEffect(() => {\n    setCategoriesList(dishCategories);\n\n    // set default values\n    if (!data.hasOwnProperty(\"category\")) {\n      data['category'] = dishCategories[0].id\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        category: dishCategories[0].id,\n      }));\n    }\n\n    if (data.hasOwnProperty(\"name\")) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        id: data.id,\n      }));\n    }\n    //if it is for edit\n    setImagePreview(data.image);\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    onSubmit(formData);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    formData.image = file;\n\n    //To show image preview\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n  };\n\n  return (\n    <FormDish onSubmit={handleSubmit}>\n      {data.name ? <h2>Edit Dish</h2> : <h2>Add New Dish</h2>}\n      <FormDishDiv>\n        {/* text inputs */}\n        <InputsDiv>\n          <FormFieldNameLabel>\n            <p>Name:</p>\n          </FormFieldNameLabel>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n            autoFocus\n          />\n          {!formData.name ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Description:</p>\n          </FormFieldNameLabel>\n          <textarea\n            className=\"App-text-form-description\"\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n            required\n          />\n          {!formData.description ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Category:</p>\n          </FormFieldNameLabel>\n          <select\n            id=\"caregory\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            {categoriesList.map((cat, index) => (\n              <option key={index} name=\"category\" value={Number(cat.id)}>\n                {cat.name}\n              </option>\n            ))}\n          </select>\n          {!formData.category ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Observation:</p>\n          </FormFieldNameLabel>\n          <textarea\n            className=\"App-text-form-observation\"\n            id=\"observation\"\n            name=\"observation\"\n            value={formData.observation}\n            onChange={handleChange}\n          />\n          <div className=\"new-dish-form-form-price\">\n            <FormFieldNameLabel>\n              <p>Price:</p>\n              <input\n                className=\"new-dish-form-form-price-price\"\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleChange}\n                required\n              />\n              {!formData.price ? (\n                <FromErrorLabel>this field is required</FromErrorLabel>\n              ) : (\n                <FromErrorLabel></FromErrorLabel>\n              )}\n            </FormFieldNameLabel>\n            <FormFieldNameLabel>\n              <p>Currency:</p>\n              <input\n                className=\"new-dish-form-form-price-currency\"\n                type=\"text\"\n                id=\"currency\"\n                name=\"currency\"\n                value={formData.currency}\n                onChange={handleChange}\n                required\n              />\n              {!formData.currency ? (\n                <FromErrorLabel>this field is required</FromErrorLabel>\n              ) : (\n                <FromErrorLabel></FromErrorLabel>\n              )}\n            </FormFieldNameLabel>\n          </div>\n          <ButtonCreateEdit disabled={data===formData} type=\"submit\">\n            {data.name ? \"Update\" : \"Create\"}\n          </ButtonCreateEdit>\n        </InputsDiv>\n        {/* image inputs */}\n        <ImageFormDiv>\n          <FormFieldNameLabel className=\"new-dish-form-form-picture\">\n            Picture:\n          </FormFieldNameLabel>\n          {!formData.image ? (\n            <>\n            <SelectImageInformationLable>\n              <label>Upload a refecence picture to your dish:</label>\n              <FontAwesomeIcon icon={faCamera} />\n              </SelectImageInformationLable>\n            \n            </>\n          ) : (\n              <ImageForm\n                name=\"image\"\n                src={imagePreview}\n                alt=\"dish selected file\"\n              />\n            \n          )}\n          <ImageFormButtonLabel htmlFor=\"image\"><FontAwesomeIcon icon={faCloudArrowUp} /><p>{!formData.image ? 'Upload': 'Change' }</p></ImageFormButtonLabel>\n          <ImageInput\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            required\n            onChange={handleFileChange}\n          />\n        </ImageFormDiv>\n      </FormDishDiv>\n    </FormDish>\n  );\n};\n\nexport default DishForm;","/home/adolfo/menu_app/frontend/menu/src/components/forms/DishCategoryForm.jsx",[],[],"/home/adolfo/menu_app/frontend/menu/src/components/popups/ConfirmationYesNo.jsx",["231","232","233","234","235"],[],"/home/adolfo/menu_app/frontend/menu/src/components/userInformation.jsx",[],[],{"ruleId":"236","severity":1,"message":"237","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"240","line":9,"column":26,"nodeType":"238","messageId":"239","endLine":9,"endColumn":43},{"ruleId":"236","severity":1,"message":"241","line":10,"column":24,"nodeType":"238","messageId":"239","endLine":10,"endColumn":39},{"ruleId":"236","severity":1,"message":"242","line":10,"column":55,"nodeType":"238","messageId":"239","endLine":10,"endColumn":70},{"ruleId":"236","severity":1,"message":"243","line":10,"column":83,"nodeType":"238","messageId":"239","endLine":10,"endColumn":95},{"ruleId":"236","severity":1,"message":"244","line":1,"column":39,"nodeType":"238","messageId":"239","endLine":1,"endColumn":48},{"ruleId":"236","severity":1,"message":"245","line":20,"column":10,"nodeType":"238","messageId":"239","endLine":20,"endColumn":19},{"ruleId":"236","severity":1,"message":"246","line":20,"column":21,"nodeType":"238","messageId":"239","endLine":20,"endColumn":33},{"ruleId":"236","severity":1,"message":"247","line":34,"column":10,"nodeType":"238","messageId":"239","endLine":34,"endColumn":24},{"ruleId":"236","severity":1,"message":"248","line":36,"column":10,"nodeType":"238","messageId":"239","endLine":36,"endColumn":27},{"ruleId":"236","severity":1,"message":"249","line":37,"column":10,"nodeType":"238","messageId":"239","endLine":37,"endColumn":29},{"ruleId":"236","severity":1,"message":"250","line":15,"column":10,"nodeType":"238","messageId":"239","endLine":15,"endColumn":18},{"ruleId":"236","severity":1,"message":"251","line":19,"column":29,"nodeType":"238","messageId":"239","endLine":19,"endColumn":41},{"ruleId":"236","severity":1,"message":"247","line":24,"column":10,"nodeType":"238","messageId":"239","endLine":24,"endColumn":24},{"ruleId":"252","severity":1,"message":"253","line":43,"column":6,"nodeType":"254","endLine":43,"endColumn":14,"suggestions":"255"},{"ruleId":"236","severity":1,"message":"237","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"256","line":8,"column":62,"nodeType":"238","messageId":"239","endLine":8,"endColumn":75},{"ruleId":"236","severity":1,"message":"257","line":20,"column":10,"nodeType":"238","messageId":"239","endLine":20,"endColumn":22},{"ruleId":"236","severity":1,"message":"258","line":20,"column":41,"nodeType":"238","messageId":"239","endLine":20,"endColumn":53},{"ruleId":"236","severity":1,"message":"259","line":20,"column":72,"nodeType":"238","messageId":"239","endLine":20,"endColumn":81},{"ruleId":"252","severity":1,"message":"260","line":82,"column":6,"nodeType":"254","endLine":82,"endColumn":22,"suggestions":"261"},{"ruleId":"252","severity":1,"message":"262","line":20,"column":6,"nodeType":"254","endLine":20,"endColumn":8,"suggestions":"263"},{"ruleId":"236","severity":1,"message":"264","line":3,"column":7,"nodeType":"238","messageId":"239","endLine":3,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"257","line":16,"column":10,"nodeType":"238","messageId":"239","endLine":16,"endColumn":22},{"ruleId":"236","severity":1,"message":"258","line":16,"column":41,"nodeType":"238","messageId":"239","endLine":16,"endColumn":53},{"ruleId":"236","severity":1,"message":"259","line":16,"column":72,"nodeType":"238","messageId":"239","endLine":16,"endColumn":81},{"ruleId":"236","severity":1,"message":"240","line":17,"column":26,"nodeType":"238","messageId":"239","endLine":17,"endColumn":43},{"ruleId":"236","severity":1,"message":"265","line":19,"column":10,"nodeType":"238","messageId":"239","endLine":19,"endColumn":16},{"ruleId":"236","severity":1,"message":"266","line":19,"column":18,"nodeType":"238","messageId":"239","endLine":19,"endColumn":27},{"ruleId":"252","severity":1,"message":"267","line":77,"column":6,"nodeType":"254","endLine":77,"endColumn":22,"suggestions":"268"},{"ruleId":"236","severity":1,"message":"237","line":2,"column":8,"nodeType":"238","messageId":"239","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"258","line":8,"column":41,"nodeType":"238","messageId":"239","endLine":8,"endColumn":53},{"ruleId":"236","severity":1,"message":"259","line":8,"column":72,"nodeType":"238","messageId":"239","endLine":8,"endColumn":81},{"ruleId":"252","severity":1,"message":"269","line":19,"column":6,"nodeType":"254","endLine":19,"endColumn":16,"suggestions":"270"},{"ruleId":"236","severity":1,"message":"237","line":1,"column":8,"nodeType":"238","messageId":"239","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"271","line":13,"column":23,"nodeType":"238","messageId":"239","endLine":13,"endColumn":36},{"ruleId":"236","severity":1,"message":"257","line":18,"column":10,"nodeType":"238","messageId":"239","endLine":18,"endColumn":22},{"ruleId":"236","severity":1,"message":"258","line":18,"column":41,"nodeType":"238","messageId":"239","endLine":18,"endColumn":53},{"ruleId":"236","severity":1,"message":"259","line":18,"column":72,"nodeType":"238","messageId":"239","endLine":18,"endColumn":81},{"ruleId":"236","severity":1,"message":"272","line":2,"column":17,"nodeType":"238","messageId":"239","endLine":2,"endColumn":25},{"ruleId":"236","severity":1,"message":"273","line":2,"column":27,"nodeType":"238","messageId":"239","endLine":2,"endColumn":37},{"ruleId":"236","severity":1,"message":"274","line":4,"column":10,"nodeType":"238","messageId":"239","endLine":4,"endColumn":17},{"ruleId":"236","severity":1,"message":"275","line":56,"column":7,"nodeType":"238","messageId":"239","endLine":56,"endColumn":21},{"ruleId":"236","severity":1,"message":"276","line":79,"column":7,"nodeType":"238","messageId":"239","endLine":79,"endColumn":11},{"ruleId":"252","severity":1,"message":"277","line":31,"column":6,"nodeType":"254","endLine":31,"endColumn":8,"suggestions":"278"},{"ruleId":"236","severity":1,"message":"246","line":13,"column":21,"nodeType":"238","messageId":"239","endLine":13,"endColumn":33},{"ruleId":"252","severity":1,"message":"277","line":47,"column":6,"nodeType":"254","endLine":47,"endColumn":8,"suggestions":"279"},{"ruleId":"236","severity":1,"message":"272","line":2,"column":17,"nodeType":"238","messageId":"239","endLine":2,"endColumn":25},{"ruleId":"236","severity":1,"message":"273","line":2,"column":27,"nodeType":"238","messageId":"239","endLine":2,"endColumn":37},{"ruleId":"236","severity":1,"message":"274","line":4,"column":10,"nodeType":"238","messageId":"239","endLine":4,"endColumn":17},{"ruleId":"236","severity":1,"message":"275","line":56,"column":7,"nodeType":"238","messageId":"239","endLine":56,"endColumn":21},{"ruleId":"236","severity":1,"message":"276","line":79,"column":7,"nodeType":"238","messageId":"239","endLine":79,"endColumn":11},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'setDishCategories' is assigned a value but never used.","'setToastVisible' is assigned a value but never used.","'setToastMessage' is assigned a value but never used.","'setToastType' is assigned a value but never used.","'useEffect' is defined but never used.","'errorText' is assigned a value but never used.","'setErrorText' is assigned a value but never used.","'csfrTokenValue' is assigned a value but never used.","'userLoggedIdValue' is assigned a value but never used.","'userLoggedNameValue' is assigned a value but never used.","'Navigate' is defined but never used.","'userLoggedId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["280"],"'DishesContext' is defined but never used.","'toastVisible' is assigned a value but never used.","'toastMessage' is assigned a value but never used.","'toastType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'textTitle'. Either include it or remove the dependency array. If 'setTitle' needs the current value of 'textTitle', you can also switch to useReducer instead of useState and read 'textTitle' in the reducer.",["282"],"'handleErrors' is assigned a value but never used.","'dishes' is assigned a value but never used.","'setDishes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.dish'. Either include it or remove the dependency array. If 'setDish' needs the current value of 'props.dish', you can also switch to useReducer instead of useState and read 'props.dish' in the reducer.",["283"],"React Hook useEffect has missing dependencies: 'setToastMessage', 'setToastType', 'setToastVisible', and 'toastVisible'. Either include them or remove the dependency array.",["284"],"'ToolBarButton' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Context' is defined but never used.","'FieldNameLabel' is assigned a value but never used.","'Form' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'dishCategories'. Either include them or remove the dependency array.",["285"],["286"],{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"297","fix":"299"},"Update the dependencies array to be: [logOut, navigate]",{"range":"300","text":"301"},"Update the dependencies array to be: [category, dishCategories]",{"range":"302","text":"303"},"Update the dependencies array to be: [textTitle]",{"range":"304","text":"305"},"Update the dependencies array to be: [dishCategories, props.dish]",{"range":"306","text":"307"},"Update the dependencies array to be: [duration, setToastMessage, setToastType, setToastVisible, toastVisible]",{"range":"308","text":"309"},"Update the dependencies array to be: [data, dishCategories]",{"range":"310","text":"311"},{"range":"312","text":"311"},[1409,1417],"[logOut, navigate]",[3035,3051],"[category, dishCategories]",[511,513],"[textTitle]",[2744,2760],"[dishCategories, props.dish]",[692,702],"[duration, setToastMessage, setToastType, setToastVisible, toastVisible]",[899,901],"[data, dishCategories]",[1292,1294]]