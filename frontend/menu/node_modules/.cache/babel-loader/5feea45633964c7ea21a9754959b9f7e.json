{"ast":null,"code":"var _jsxFileName = \"/home/adolfo/menu_app/frontend/menu/src/pages/DishList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CategoryItem from '../components/CategoryItem';\nimport ListItem from '../components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DishList = () => {\n  _s();\n\n  let category = '';\n  let [dishes, setDishes] = useState([]);\n  useEffect(() => {\n    getDishes();\n  }, []);\n\n  let getDishes = async () => {\n    let response = await fetch('/api/dishes/');\n    let data = await response.json();\n    setDishes(data);\n  };\n\n  let getCategory = async categoryUrl => {\n    let response = await fetch(categoryUrl);\n    let data = await response.json();\n    console.log(data);\n  };\n\n  let actualCategory = dish => {\n    category = dish.category.name;\n  };\n\n  let groupCategory = (index, iteratedCaregory) => {\n    getCategory(iteratedCaregory);\n    let toRender = iteratedCaregory !== category ? /*#__PURE__*/_jsxDEV(CategoryItem, {\n      category: iteratedCaregory\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 56\n    }, this) : '';\n    return toRender;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dish-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dishes.map((dish, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [groupCategory(index, dish.category), /*#__PURE__*/_jsxDEV(ListItem, {\n            dish: dish\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), actualCategory(dish), \" \"]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DishList, \"twy18IL6yOwKsB+klFzRM/xTDww=\");\n\n_c = DishList;\nexport default DishList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DishList\");","map":{"version":3,"names":["React","useState","useEffect","CategoryItem","ListItem","DishList","category","dishes","setDishes","getDishes","response","fetch","data","json","getCategory","categoryUrl","console","log","actualCategory","dish","name","groupCategory","index","iteratedCaregory","toRender","map"],"sources":["/home/adolfo/menu_app/frontend/menu/src/pages/DishList.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CategoryItem from '../components/CategoryItem'\nimport ListItem from '../components/ListItem'\n\n\nconst DishList = () => {\n\n\n    let category = ''\n    \n    let [dishes, setDishes] = useState([])\n    \n\n    useEffect(()=> {\n        getDishes()\n    }, [])\n\n    let getDishes = async () => {\n\n        let response = await fetch('/api/dishes/')\n        let data = await response.json()\n        setDishes(data)\n        \n    }\n\n    let getCategory = async (categoryUrl) => {\n        let response = await fetch(categoryUrl)\n        let data = await response.json()\n        console.log(data)\n    }\n\n    let  actualCategory = (dish) => {\n        category = dish.category.name\n    }\n\n    let groupCategory = (index, iteratedCaregory) => {\n        \n        getCategory(iteratedCaregory)\n\n        let toRender = iteratedCaregory !== category ? <CategoryItem key={index} category={iteratedCaregory} /> : ''\n        return toRender\n    }\n\n    return (\n        <div>\n            <div className=\"dish-list\">\n                {\n                <div>\n                    {dishes.map((dish, index) => (\n                        \n                        <>{groupCategory(index, dish.category)}\n                        <ListItem key={index} dish={dish} />\n                        {actualCategory(dish)} </>\n                        \n                        \n                    ))}\n                </div>\n                }\n            </div>\n        </div>\n    )\n}\n\n\nexport default DishList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAGnB,IAAIC,QAAQ,GAAG,EAAf;EAEA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAAlC;EAGAC,SAAS,CAAC,MAAK;IACXO,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAIA,SAAS,GAAG,YAAY;IAExB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,CAA1B;IACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAL,SAAS,CAACI,IAAD,CAAT;EAEH,CAND;;EAQA,IAAIE,WAAW,GAAG,MAAOC,WAAP,IAAuB;IACrC,IAAIL,QAAQ,GAAG,MAAMC,KAAK,CAACI,WAAD,CAA1B;IACA,IAAIH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAG,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACH,CAJD;;EAMA,IAAKM,cAAc,GAAIC,IAAD,IAAU;IAC5Bb,QAAQ,GAAGa,IAAI,CAACb,QAAL,CAAcc,IAAzB;EACH,CAFD;;EAIA,IAAIC,aAAa,GAAG,CAACC,KAAD,EAAQC,gBAAR,KAA6B;IAE7CT,WAAW,CAACS,gBAAD,CAAX;IAEA,IAAIC,QAAQ,GAAGD,gBAAgB,KAAKjB,QAArB,gBAAgC,QAAC,YAAD;MAA0B,QAAQ,EAAEiB;IAApC,GAAmBD,KAAnB;MAAA;MAAA;MAAA;IAAA,QAAhC,GAA2F,EAA1G;IACA,OAAOE,QAAP;EACH,CAND;;EAQA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,uBAEI;QAAA,UACKjB,MAAM,CAACkB,GAAP,CAAW,CAACN,IAAD,EAAOG,KAAP,kBAER;UAAA,WAAGD,aAAa,CAACC,KAAD,EAAQH,IAAI,CAACb,QAAb,CAAhB,eACA,QAAC,QAAD;YAAsB,IAAI,EAAEa;UAA5B,GAAeG,KAAf;YAAA;YAAA;YAAA;UAAA,QADA,EAECJ,cAAc,CAACC,IAAD,CAFf;QAAA,gBAFH;MADL;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAxDD;;GAAMd,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}